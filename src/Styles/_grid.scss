@use 'sass:math';
@use 'variables';
@use 'breakpoint';

// grid columns
$grid-columns: 12;

// grid gaps
$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);

// base layout classes
.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
    height: 100vh;
}

.row {
    display: flex;
    flex-wrap: row wrap;
}

// grid-gaps
@each $key, $val in $grid-gaps {
    .gap-#{$key} > * {
        padding: $val;
    }
    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

// column classes
@include breakpoint.xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include breakpoint.sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include breakpoint.md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include breakpoint.lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include breakpoint.xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

.responsive-test{
    @include breakpoint.xs{
        h1 {
            font-size: variables.$font-size-xl;
        }

        h2 {
            font-size: variables.$font-size-lg;
        }

        h3 {
            font-size: variables.$font-size-md; 
        }

        h4 {
            font-size: variables.$font-size-md;
        }
    
        .input-text{
            font-size: variables.$font-size-sm;
            padding: variables.$base-padding 0;
        }
        .footer{
            font-size: math.div(variables.$font-size-xs, 1.12);
        }
    }

    @include breakpoint.sm{
        h1 {
            font-size: variables.$font-size-lg;
        }

        h2 {
            font-size: variables.$font-size-lg;
        }

        h3 {
            font-size: variables.$font-size-md; 
        }

        h4 {
            font-size: variables.$font-size-md;
        }
    
        .input-text{
            font-size: variables.$font-size-sm;
            padding: variables.$base-padding 0;
        }
        
    }

    @include breakpoint.md{
        h1 {
            font-size: variables.$font-size-xxl;
        }

        h2 {
            font-size: variables.$font-size-lg;
        }

        h3 {
            font-size: variables.$font-size-md; 
        }

        h4 {
            font-size: variables.$font-size-md;
        }

        .input-text{
            font-size: variables.$font-size-md;
            padding: variables.$base-padding 0;
        }
        .footer{
            font-size: variables.$font-size-md;
        }
    }

    @include breakpoint.lg{
        h1 {
            font-size: variables.$font-size-4l;
        }

        h2 {
            font-size: variables.$font-size-xl;
        }

        h3 {
            font-size: variables.$font-size-lg; 
        }

        h4 {
            font-size: variables.$font-size-md;
        }
    
        .input-text{
            font-size: variables.$font-size-md;
            padding: variables.$base-padding 0;
        }
        .footer{
            font-size: variables.$font-size-md;
        }
    }
}
